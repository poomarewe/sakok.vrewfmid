local CMDLib = {}
CMDLib.__index = CMDLib

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local UIS = game:GetService("UserInputService")

-- Remove previous instance
local existing = PlayerGui:FindFirstChild("CMDUI")
if existing then
	existing:Destroy()
end

local function makeDraggable(frame, handle)
	local dragging, offset

	handle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			offset = input.Position - frame.AbsolutePosition
		end
	end)

	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			frame.Position = UDim2.new(0, input.Position.X - offset.X, 0, input.Position.Y - offset.Y)
		end
	end)
end

function CMDLib:CreateConsole()
	local self = setmetatable({}, CMDLib)
	self.Commands = {}

	local gui = Instance.new("ScreenGui", PlayerGui)
	gui.Name = "CMDUI"
	gui.ResetOnSpawn = false

	local frame = Instance.new("Frame", gui)
	frame.Size = UDim2.new(0, 600, 0, 300)
	frame.Position = UDim2.new(0.5, -300, 0.5, -150)
	frame.BackgroundColor3 = Color3.new(0, 0, 0)
	frame.BorderSizePixel = 0
	frame.BackgroundTransparency = 0.1
	frame.Name = "ConsoleFrame"

	local title = Instance.new("TextLabel", frame)
	title.Size = UDim2.new(1, -30, 0, 24)
	title.Position = UDim2.new(0, 5, 0, 0)
	title.Text = "CMD - Roblox"
	title.BackgroundTransparency = 1
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 16

	local closeBtn = Instance.new("TextButton", frame)
	closeBtn.Size = UDim2.new(0, 24, 0, 24)
	closeBtn.Position = UDim2.new(1, -28, 0, 0)
	closeBtn.Text = "X"
	closeBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
	closeBtn.TextColor3 = Color3.new(1, 1, 1)
	closeBtn.Font = Enum.Font.Code
	closeBtn.TextSize = 16
	closeBtn.MouseButton1Click:Connect(function()
		gui:Destroy()
	end)

	local output = Instance.new("TextLabel", frame)
	output.Name = "Output"
	output.Position = UDim2.new(0, 5, 0, 30)
	output.Size = UDim2.new(1, -10, 1, -60)
	output.TextXAlignment = Enum.TextXAlignment.Left
	output.TextYAlignment = Enum.TextYAlignment.Top
	output.BackgroundTransparency = 1
	output.TextColor3 = Color3.new(1, 1, 1)
	output.Font = Enum.Font.Code
	output.TextSize = 16
	output.TextWrapped = false
	output.Text = ""
	output.TextScaled = false
	output.TextStrokeTransparency = 1
	output.ClipsDescendants = true
	output.TextYAlignment = Enum.TextYAlignment.Top

	local inputBox = Instance.new("TextBox", frame)
	inputBox.PlaceholderText = "Type a command..."
	inputBox.Size = UDim2.new(1, -10, 0, 24)
	inputBox.Position = UDim2.new(0, 5, 1, -26)
	inputBox.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
	inputBox.TextColor3 = Color3.new(1, 1, 1)
	inputBox.Font = Enum.Font.Code
	inputBox.TextSize = 16
	inputBox.ClearTextOnFocus = false
	inputBox.TextXAlignment = Enum.TextXAlignment.Left

	local function printToOutput(msg)
		output.Text = output.Text .. "\n" .. msg
		output.Text = string.sub(output.Text, -2000) -- trim
	end

	local function runCommand(cmdLine)
		local args = string.split(cmdLine, " ")
		local cmd = table.remove(args, 1):lower()

		local handler = self.Commands[cmd]
		if handler then
			local success, result = pcall(function() return handler(unpack(args)) end)
			if success then
				if result then printToOutput(result) end
			else
				printToOutput("Error: " .. result)
			end
		else
			printToOutput("Unknown command: " .. cmd)
		end
	end

	-- Handle command enter
	inputBox.FocusLost:Connect(function(enter)
		if enter then
			local text = inputBox.Text
			inputBox.Text = ""
			printToOutput("> " .. text)
			runCommand(text)
		end
	end)

	-- Tab to complete
	UIS.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.Tab and inputBox:IsFocused() then
			local currentText = inputBox.Text:lower()
			for name in pairs(self.Commands) do
				if string.sub(name, 1, #currentText) == currentText then
					inputBox.Text = name .. " "
					break
				end
			end
		end
	end)

	-- Register default commands
	self:Command("help", function()
		local out = "Available commands:\n"
		for name in pairs(self.Commands) do
			out = out .. " - " .. name .. "\n"
		end
		return out
	end)

	self:Command("say", function(...)
		return table.concat({...}, " ")
	end)

	self:Command("clear", function()
		output.Text = ""
	end)

	makeDraggable(frame, title)
	return self
end

function CMDLib:Command(name, callback)
	self.Commands[name:lower()] = callback
end

return CMDLib
