local CMDLib = {}
CMDLib.__index = CMDLib

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local UIS = game:GetService("UserInputService")

-- Clean up previous
local old = PlayerGui:FindFirstChild("CMDUI")
if old then old:Destroy() end

-- Drag helper
local function makeDraggable(frame, handle)
	local dragging = false
	local offset
	handle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			offset = input.Position - frame.AbsolutePosition
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			frame.Position = UDim2.new(0, input.Position.X - offset.X, 0, input.Position.Y - offset.Y)
		end
	end)
end

function CMDLib:CreateConsole()
	local self = setmetatable({}, CMDLib)
	self.Commands = {}

	local gui = Instance.new("ScreenGui", PlayerGui)
	gui.Name = "CMDUI"
	gui.ResetOnSpawn = false
	gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local frame = Instance.new("Frame", gui)
	frame.Size = UDim2.new(0, 600, 0, 300)
	frame.Position = UDim2.new(0.5, -300, 0.5, -150)
	frame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
	frame.BorderSizePixel = 0
	frame.Name = "ConsoleFrame"

	local title = Instance.new("TextLabel", frame)
	title.Size = UDim2.new(1, -30, 0, 24)
	title.Position = UDim2.new(0, 5, 0, 0)
	title.Text = "Roblox Command Prompt"
	title.BackgroundTransparency = 1
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.TextColor3 = Color3.fromRGB(200, 200, 255)
	title.Font = Enum.Font.Code
	title.TextSize = 16

	local close = Instance.new("TextButton", frame)
	close.Size = UDim2.new(0, 24, 0, 24)
	close.Position = UDim2.new(1, -28, 0, 0)
	close.Text = "X"
	close.BackgroundColor3 = Color3.fromRGB(90, 20, 100)
	close.TextColor3 = Color3.new(1, 1, 1)
	close.Font = Enum.Font.Code
	close.TextSize = 16
	close.MouseButton1Click:Connect(function()
		gui:Destroy()
	end)

	local output = Instance.new("TextLabel", frame)
	output.Name = "Output"
	output.Position = UDim2.new(0, 5, 0, 26)
	output.Size = UDim2.new(1, -10, 1, -56)
	output.BackgroundTransparency = 1
	output.TextColor3 = Color3.new(1, 1, 1)
	output.TextXAlignment = Enum.TextXAlignment.Left
	output.TextYAlignment = Enum.TextYAlignment.Top
	output.Font = Enum.Font.Code
	output.TextSize = 16
	output.TextWrapped = false
	output.TextScaled = false
	output.Text = ""
	output.ClipsDescendants = true

	local inputBox = Instance.new("TextBox", frame)
	inputBox.PlaceholderText = "Type command..."
	inputBox.Size = UDim2.new(1, -10, 0, 24)
	inputBox.Position = UDim2.new(0, 5, 1, -28)
	inputBox.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	inputBox.TextColor3 = Color3.new(1, 1, 1)
	inputBox.Font = Enum.Font.Code
	inputBox.TextSize = 16
	inputBox.ClearTextOnFocus = false
	inputBox.TextXAlignment = Enum.TextXAlignment.Left
	inputBox.Text = ""

	local function printToOutput(msg)
		output.Text = output.Text .. "\n" .. msg
		output.Text = string.sub(output.Text, -2048)
	end

	local function runCommand(line)
		local split = string.split(line, " ")
		local cmd = table.remove(split, 1):lower()
		local func = self.Commands[cmd]
		if func then
			local success, result = pcall(func, unpack(split))
			if not success then
				printToOutput("Error: " .. tostring(result))
			elseif result then
				printToOutput(result)
			end
		else
			printToOutput("Unknown command: " .. cmd)
		end
	end

	-- Tab Completion
	UIS.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.Tab and inputBox:IsFocused() then
			local current = inputBox.Text:lower()
			for name in pairs(self.Commands) do
				if name:sub(1, #current) == current then
					inputBox.Text = name
					inputBox.CursorPosition = #name + 1
					break
				end
			end
		end
	end)

	-- Handle Input
	inputBox.FocusLost:Connect(function(enter)
		if enter and inputBox.Text ~= "" then
			local txt = inputBox.Text
			inputBox.Text = ""
			printToOutput("> " .. txt)
			runCommand(txt)
		end
	end)

	-- Register default commands
	self:Command("help", function()
		local msg = "Available commands:\n"
		for name in pairs(self.Commands) do
			msg = msg .. "  - " .. name .. "\n"
		end
		return msg
	end)

	self:Command("say", function(...)
		return table.concat({...}, " ")
	end)

	self:Command("clear", function()
		output.Text = ""
	end)

	printToOutput("Type 'help' for a list of commands.")

	makeDraggable(frame, title)
	return self
end

function CMDLib:Command(name, callback)
	self.Commands[name:lower()] = callback
end

return CMDLib
